<?php

declare(strict_types=1);

namespace Mammatus\Queue\Generated;

use Mammatus\Queue\Worker;

// phpcs:disable
/**
 * Autogenerated file, do not edit. Changes will be overwritten on the next composer (install|update)
 */
abstract class AbstractList
{
    /**
     * @return iterable<string, Worker>
     */
    final protected function workers(): iterable
    {
{% for hash, worker in workers %}
        /** @see \{{ worker.class }} */
        yield '{% if action.splitOut == true %}kubernetes{% else %}internal{% endif %}-{{ worker.class|replace({'\\': '-'}) }}-{{ worker.consumer.friendlyName|length > 0 ? worker.consumer.friendlyName : hash }}' => new Worker(
            '{{ hash }}',
            '{{ worker.consumer.friendlyName }}',
{% if worker.splitOut == true %}
            'kubernetes',
{% else %}
            'internal',
{% endif %}
            '{{ worker.consumer.queue }}',
            {{ worker.consumer.concurrency }},
            \{{ worker.class }}::class,
            '{{ worker.method }}',
            \{{ worker.dtoClass }}::class,
            \json_decode('{{ worker.consumer.addOns|json_encode()|raw }}', true), /** @phpstan-ignore-line */
        );
{% endfor %}
    }
}
